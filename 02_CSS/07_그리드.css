h1,
h2 {
  margin-top: 20px;
}
.container {
  background: darkgray;
  /* grid 역시 display: grid;를 해야 적용된다. */
  display: grid;
  gap: 10px;
}
.item {
  color: white;
  background-color: blueviolet;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
}
/* 강사님은 사진 갤러리 관련하여 만들 때 그리드 쓰신다고 함.
깔끔하게 만들 수 있기때문인데, 오토핏,필을 이용해서 깔끔하게 만들기가 가능함. */
#grid-basic {
  grid-template-columns: 100px 200px 100px;
  grid-template-rows: 50px 50px;
}
#grid-gap {
  /* 100px 100px = repeat(2, 100px) */
  grid-template-columns: repeat(2, 150px);
  grid-template-rows: repeat(2, 80px);
  row-gap: 50px;
  column-gap: 30px;
}
#grid-span {
  /* 100px 1fr 2fr: 1:2 비율로 나머지 공간 차지해서 들어감 */
  grid-template-columns: 100px 1fr 2fr;
  grid-template-rows: repeat(4, 50px);
}
#grid-span .span1 {
  /* 브라우저 검사에서 그리드 클릭하고 나오는 사이 숫자 참고하여 어디까지 병합할지 참고 */
  grid-column: 1/3;
}
#grid-span .span2 {
  grid-row: 2/4;
}
#grid-area {
  grid-template-areas:
    "header header"
    "nav main"
    "nav sidebar"
    "footbar footbar";
}
.header {
  grid-area: header;
  background-color: aliceblue;
}
.nav {
  grid-area: nav;
  background-color: aquamarine;
}
.main {
  grid-area: main;
  background-color: burlywood;
}
.sidebar {
  grid-area: sidebar;
  background-color: coral;
}
.footbar {
  grid-area: footbar;
  background-color: cornflowerblue;
}

#auto-fit {
  /* auto-fit: 가능한 공간만큼 채우고, 남은 칸은 callapse 
  화면 크기 변화에 따라 공간을 거의 다 채움.*/
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
}
#auto-fill {
  /* auto-fill: 가능한 칸 수만큼 채우고, 빈 칸도 자리 확보 */
  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
}

.item i {
  font-size: 2rem;
  color: cornsilk;
}
#items {
  grid-template-columns: repeat(3, 100px);
  grid-template-rows: 100px;
  /* grid에서 컨테이너에 아래 center를 걸면 컨테이너가 움직여서 item에 맞춤. */
  align-items: center;
  justify-items: center;
}
#content {
  grid-template-columns: repeat(3, 80px);
  grid-template-rows: repeat(2, 80px);
  height: 300px;
  align-content: space-evenly;
  justify-content: center;
}
